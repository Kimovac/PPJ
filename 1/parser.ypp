%{

#include <iostream>
#include <cstdlib>
#include <string>
#include <map>

using namespace std;

extern int yylex();

void yyerror(string s) {
	cerr << s << endl;
	exit(EXIT_FAILURE);
}

map<string, string*> vars;


void free_vars() {
	for(auto it = vars.begin(); it != vars.end(); it++)
		delete it->second;
}

%}

%left '.'
%left '+' '-'
%left '*' '/'
%left 'x'

%union {
	int num;
	string *str;
}

%token PRINT CON

%token<str> VAR
%token<num> NUM
%token<str> STR

%type<str> exp

%start program

%%

program: command '\n' program 	{ }
	| 							{ }
	;
command: VAR '=' exp ';'			{
										auto it = vars.find(*$1);
										if(it != vars.end())
											delete it->second;
	
										vars[*$1] = $3;
									}
	| PRINT '(' exp ')' ';'			{
										cout << *$3 << endl;
										delete $3;
									}
	;	
exp: exp '+' exp 					{
										$$ = new string(to_string(stoi(*$1) + stoi(*$3)));
										delete $1; delete $3;
									}
	| exp '-' exp 					{
										$$ = new string(to_string(stoi(*$1) - stoi(*$3)));
										delete $1; delete $3;
									}
	| exp '*' exp 					{
										$$ = new string(to_string(stoi(*$1) * stoi(*$3)));
										delete $1; delete $3;
									}
	| exp '.' exp 					{
										$$ = new string(*$1 + *$3);
										delete $1; delete $3;
									}
	| exp CON exp 					{
										$$ = new string(*$1);
										int n = stoi(*$3);
										while(--n)
											$$  = new string(*$$ + *$1);
										delete $1;
									}
	| '(' exp ')' 					{	$$ = new string(*$2);
										delete $2;
									}
	| NUM 							{	$$ = new string(to_string($1)); }
	| STR 							{	$$ = new string(*$1); }
	| VAR '[' NUM ',' NUM ']'		{	

										if($5 > $3)
											yyerror("Indeksi za podnisku nisu u redu!");
										
										auto it = vars.find(*$1);
										if(it == vars.end())
											yyerror("Promenjilva nije definisana!");
	
										delete $1;
										$$ = new string((*(it->second)).substr($3, $5));
									}
	| VAR 							{
										auto it = vars.find(*$1);
										if(it == vars.end())
											yyerror("Promenjilva nije definisana!");
	
										$$ = new string(*(it->second));
										delete $1;
									}

	;
%%

int main() {
	if(yyparse() != 0)
		yyerror("To many tokens!");

	cout << "OK" << endl;

	free_vars();
	exit(EXIT_SUCCESS);
}